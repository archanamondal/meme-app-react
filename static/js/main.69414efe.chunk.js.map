{"version":3,"sources":["imgs/Spinner.gif","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","NextButton","button","DownloadButton","Heading","h1","Img","img","App","useState","imgUrl","setImgUrl","loading","setLoading","getMemes","axios","get","then","response","data","url","catch","err","console","log","useEffect","src","loader","alt","style","height","width","display","onClick","saveAs","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAAe,G,MAAA,IAA0B,qC,OCOnCA,EAAYC,IAAOC,IAAV,qQAWTC,EAAaF,IAAOG,OAAV,mhBA0BVC,EAAiBJ,IAAOG,OAAV,6lBA6BdE,EAAUL,IAAOM,GAAV,gIAOPC,EAAMP,IAAOQ,IAAV,qSAsEMC,MArDf,WACE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EAAW,WACfD,GAAW,GACXE,IACGC,IAAI,wCACJC,MAAK,SAACC,GACLP,EAAUO,EAASC,KAAKC,KACxBP,GAAW,MAEZQ,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAYlB,OAJAG,qBAAU,WACRX,MACC,IAECF,EAEA,cAACd,EAAD,UACE,qBAAK4B,IAAKC,EAAQC,IAAI,GAAGC,MAAO,CAAEC,OAAQ,OAAQC,MAAO,YAM7D,mCACE,eAACjC,EAAD,WACE,cAACM,EAAD,6BAGA,cAACE,EAAD,CAAKoB,IAAOhB,EAAQkB,IAAI,KAExB,sBAAKC,MAAO,CAAEG,QAAS,QAAvB,UACE,cAAC/B,EAAD,CAAYgC,QAASnB,EAArB,uBACA,eAACX,EAAD,CAAgB8B,QA1BF,WACpBC,iBAAOxB,EAAQ,aAyBT,UACG,IADH,WAEW,gBClINyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.69414efe.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Spinner.70b56022.gif\";","import React, { useState, useEffect } from \"react\";\nimport { saveAs } from \"file-saver\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\nimport loader from \"./imgs/Spinner.gif\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  background-color: #00dbde;\n  background-image: linear-gradient(90deg, #00dbde 0%, #fc00ff 100%);\n`;\n\nconst NextButton = styled.button`\n  height: 40px;\n  width: auto;\n  margin: 30px;\n  padding: 0px 20px;\n  border: 1.5px solid #33d9b2;\n  font-size: 20px;\n  cursor: pointer;\n  font-family: montserrat;\n  color: #fff;\n  transition: 0.8s;\n  position: relative;\n  overflow: hidden;\n  background:none;\n  border-radius: 30px;\n\n  &:hover {\n    box-shadow: 0 5px 50px 0 #33d9b2 inset, 0 5px 50px 0 #3c40c6;\n  }\n  @media (min-width:0px) and (max-width:600px){\n    font-size: 18px;\n    padding: 5px 20px;\n    height: auto;\n  }\n`;\n\nconst DownloadButton = styled.button`\n  height: 40px;\n  width: auto;\n  margin: 30px;\n  padding: 0px 20px;\n  border: 1.5px solid #33d9b2;\n  font-size: 20px;\n  cursor: pointer;\n  font-family: montserrat;\n  color: #fff;\n  transition: 0.8s;\n  position: relative;\n  overflow: hidden;\n  background:none;\n  border-radius: 30px;\n\n  &:hover {\n    /* background-color: #9b59b6;\n    box-shadow: 1px 5px #636e72; */\n    box-shadow: 0 5px 50px 0 #33d9b2 inset, 0 5px 50px 0 #3c40c6;\n  }\n  @media (min-width:0px) and (max-width:600px){\n    font-size: 18px;\n    padding: 5px 20px;\n    height: auto;\n  }\n\n`;\n\nconst Heading = styled.h1`\n  color: #fff;\n  font-family: \"Dancing Script\", cursive;\n  font-size: 40px;\n  font-weight: 600;\n`;\n\nconst Img = styled.img`\n  height: 400px;\n  width: auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover{\n    box-shadow: 0 5px 50px 0 #33d9b2 inset, 0 5px 50px 0 #3c40c6;\n  }\n    @media (min-width:0px) and (max-width:600px){\n    width: 300px;\n  }\n`;\n\n\n\nfunction App() {\n  const [imgUrl, setImgUrl] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const getMemes = () => {\n    setLoading(true);\n    axios\n      .get(\"https://meme-api.herokuapp.com/gimme\")\n      .then((response) => {\n        setImgUrl(response.data.url);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const downloadImage = () => {\n    saveAs(imgUrl, \"meme.jpg\");\n  };\n\n  useEffect(() => {\n    getMemes();\n  }, []);\n\n  if (loading) {\n    return (\n      <Container>\n        <img src={loader} alt=\"\" style={{ height: \"50px\", width: \"50px\" }} />\n      </Container>\n    );\n  }\n\n  return (\n    <>\n      <Container>\n        <Heading>Meme Generator</Heading>\n\n        {/* <img src={imgUrl} alt=\"\" style={{height:\"400px\", width:\"auto\", display:\"flex\", alignItems:\"center\", justifyContent:\"center\"}} /> */}\n        <Img src = {imgUrl} alt=\"\"/>\n\n        <div style={{ display: \"flex\" }}>\n          <NextButton onClick={getMemes}> Get New </NextButton>\n          <DownloadButton onClick={downloadImage}>\n            {\" \"}\n            Download{\" \"}\n          </DownloadButton>\n        </div>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n\n//Download button with functionality","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}